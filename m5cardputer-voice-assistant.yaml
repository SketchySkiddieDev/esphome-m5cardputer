esphome:
  name: m5cardputer
  friendly_name: M5Cardputer

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "M5Cardputer Fallback Hotspot"
    password: !secret ap_password

captive_portal:
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Asia/Jerusalem
    servers:
     - 0.pool.ntp.org
     - 1.pool.ntp.org
     - 2.pool.ntp.org  

i2s_audio:
  i2s_lrclk_pin: GPIO43
  i2s_bclk_pin: GPIO41

microphone:
  - platform: i2s_audio
    id: external_mic
    adc_type: external  
    i2s_din_pin: GPIO46
    pdm: true

# speaker:
#   - platform: i2s_audio
#     id: echo_speaker
#     i2s_dout_pin: GPIO42
#     dac_type: external
#     mode: mono

media_player:
  - platform: i2s_audio
    id: media_out
    name: ESPHome I2S Media Player
    dac_type: external
    i2s_dout_pin: GPIO42
    mode: mono


spi:
  clk_pin: GPIO36
  mosi_pin: GPIO35
  miso_pin: GPIO39

display:
  platform: st7789v
  model: TTGO TDisplay 135x240
  id: m5display
  backlight_pin: GPIO38
  cs_pin: GPIO37
  dc_pin: GPIO34
  reset_pin: GPIO33
  rotation: 90
  lambda: |-
    it.print(0, 0, id(roboto_20), "Hello ESPHome!");
    it.strftime(25, 25, id(roboto_20), "%Y-%m-%d %H:%M", id(sntp_time).now());


font:
  - file: "gfonts://Roboto"
    id: roboto_20
    size: 20

voice_assistant:
  microphone: external_mic
  media_player : media_out
  noise_suppression_level: 3
  auto_gain: 31dBFS
  volume_multiplier: 100.0  
  on_start:
    - logger.log: "VA Start"
  on_end:
    - logger.log: "VA End"
    - delay: 1s
    - wait_until:
        not:
          media_player.is_playing: media_out
  on_error:
    - logger.log: "VA Error"
  on_tts_start:
    - logger.log: "VA TTS Start"
  on_tts_end:
    - media_player.play_media: !lambda return x;

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO00
      inverted: true
    name: Button
    id: echo_button
    on_press:
      - voice_assistant.start:
          silence_detection: false
    on_release:
      - voice_assistant.stop: